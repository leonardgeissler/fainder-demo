[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "backend"
dynamic = ["version"]
description = "A search engine for text and distribution-aware dataset search."
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
authors = [
    { name = "Lennart Behme", email = "lennart.behme@tu-berlin.de" },
    { name = "Leonard GeiÃŸler", email = "l.geissler@tu-berlin.de" },
]
keywords = [
    "data discovery",
    "dataset search",
    "distribution-aware",
    "percentile predicate",
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "fainder@git+https://github.com/lbhm/fainder@demo",
    "fastapi[standard]~=0.115.6",
    "hnswlib~=0.8.0",
    "lark[interegular]~=1.2",
    "loguru~=0.7.3",
    "numpy~=2.3",
    "orjson~=3.10",
    "pydantic~=2.10",
    "pydantic-settings~=2.7",
    "sentence-transformers~=4.0",
    "tantivy~=0.24.0",
    "torch~=2.0",
]

[project.optional-dependencies]
analysis=[
    "graphviz>=0.21",
    "hydra-core>=1.3.2",
    "ipykernel>=6.29.5",
    "matplotlib>=3.10.3",
    "pydot>=4.0.1",
    "seaborn>=0.13.2",
]
[project.urls]
Repository = "https://github.com/lbhm/fainder-demo"

[project.scripts]
parse-dql = "backend.engine.parser:main"

[dependency-groups]
dev = [
    "mypy~=1.13",
    "pre-commit~=4.0",
    "pytest~=8.3",
    "pytest-cov~=6.0",
    "types-hnswlib~=0.8.0",
]

[tool.hatch.version]
path = "backend/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[[tool.uv.index]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch" }

[tool.ruff]
line-length = 99
target-version = "py311"

[tool.ruff.format]
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "AIR",     # airflow
    "ARG",     # flake8-unused-arguments
    "COM812",  # missing-trailing-comma
    "CPY",     # flake8-copyright
    "D1",      # pydocstyle undocumented-*
    "DJ",      # flake8-django
    "DOC",     # pydoclint
    "EM",      # flake8-errmsg
    "ERA",     # eradicate
    "FBT",     # flake8-boolean-trap
    "FIX",     # flake8-fixme
    "PLR09",   # pylint too-many-*
    "PLR6301", # no-self-use
    "S101",    # assert (needed for pytest)
    "TD",      # flake8-todos
    "TRY003",  # raise-vanilla-args
]
isort.split-on-trailing-comma = false
preview = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
include = ["backend", "tests"]
reportUnnecessaryTypeIgnoreComment = false
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"

[tool.mypy]
files = ["backend", "tests"]
strict = true
enable_error_code = ["ignore-without-code"]
warn_unused_ignores = true
